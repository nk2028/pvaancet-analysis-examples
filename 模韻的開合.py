# 引入 `QieyunEncoder`，用於解析切韻音系音韻地位
# 所用 `QieyunEncoder` 版本爲 `0.4.1`
# 安裝方法：`pip install "qieyun-encoder==0.4.1"`
# 由於 `QieyunEncoder` 目前仍處於測試版，使用方法可能會發生變動，
# 因此需要固定版本號
import QieyunEncoder

# 設置兩個變量，分別累計兩種情況出現的次數，初始值均爲 0
上字模韻下字開口被切字開口 = 0
上字模韻下字開口被切字合口 = 0

# 開啓廣韻反切音韻地位表
with open('廣韻反切音韻地位表.csv') as f:
    # 跳過第一行，第一行爲標題行，無需解析
    next(f)

    # 對於後續的每一行
    for line in f:
        # 去除行尾的換行符，然後以逗號分開
        小韻號, 小韻首字, 上字, 下字, 被切字音韻描述們, 上字音韻描述們, 下字音韻描述們 = line.rstrip('\n').split(',')

        # 由音韻描述建立音韻地位對象
        # 可能有多種可能的音韻地位，以 / 分隔，所以需要轉換爲 list
        被切字音韻地位們 = list(map(QieyunEncoder.音韻地位.from描述, 被切字音韻描述們.split('/')))
        上字音韻地位們 = list(map(QieyunEncoder.音韻地位.from描述, 上字音韻描述們.split('/')))
        下字音韻地位們 = list(map(QieyunEncoder.音韻地位.from描述, 下字音韻描述們.split('/')))

        # 使用 `屬於` 方法判斷某個音韻地位是否屬於某個指定條件
        # 可能有多種可能的音韻地位
        # 只考慮「每種可能的音韻地位都符合给定条件」的情況
        被切字是開口 = all(被切字音韻地位.屬於('開口') for 被切字音韻地位 in 被切字音韻地位們)
        被切字是合口 = all(被切字音韻地位.屬於('合口') for 被切字音韻地位 in 被切字音韻地位們)

        上字是模韻 = all(上字音韻地位.屬於('模韻') for 上字音韻地位 in 上字音韻地位們)
        下字是開口 = all(下字音韻地位.屬於('開口') for 下字音韻地位 in 下字音韻地位們)

        # 判斷條件
        if 上字是模韻 and 下字是開口:
            if 被切字是開口:
                上字模韻下字開口被切字開口 += 1
            elif 被切字是合口:
                print(f'上字模韻、下字開口，而被切字爲合口：{小韻首字}，{上字}{下字}切')
                上字模韻下字開口被切字合口 += 1

print()  # 輸出換行

# 輸出累計結果
print(f'上字模韻、下字開口，而被切字爲開口：{上字模韻下字開口被切字開口}')
print(f'上字模韻、下字開口，而被切字爲合口：{上字模韻下字開口被切字合口}')
